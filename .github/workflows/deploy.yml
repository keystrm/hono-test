name: CI With S3 deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: 🧹 Lint with Biome
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Enable Corepack
        run: corepack enable

      - name: 🟨 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install

      - name: 🔍 Run Biome Lint
        run: pnpm lint

  test:
    name: 🧪 Unit Tests with Vitest
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Enable Corepack
        run: corepack enable

      - name: 🟨 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install

      - name: 🧪 Run Vitest
        run: pnpm test

  build:
    name: 🏗️ Build Project
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Enable Corepack
        run: corepack enable

      - name: 🟨 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install

      - name: 🛠️ Build
        run: pnpm build
  deploy:
    name: 🚀 Deploy to Lambda
    runs-on: ubuntu-latest
    needs: build

    permissions:
      id-token: write
      contents: read

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Enable Corepack
        run: corepack enable

      - name: 🟨 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --prod

      - name: 🛠️ Build Project & Prepare Lambda Package
        run: |
          pnpm build
          mkdir lambda
          cp dist/index.js lambda/index.js
          cp -r node_modules lambda/node_modules
          cd lambda && zip -r ../lambda.zip .

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 📤 Upload Lambda Zip to S3
        run: aws s3 cp lambda.zip s3://${{ secrets.S3_BUCKET_NAME }}/lambda.zip

      - name: 🚀 Update Lambda Function
        run: |
          aws lambda update-function-code \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
            --s3-bucket ${{ secrets.S3_BUCKET_NAME }} \
            --s3-key lambda.zip \
            --region ${{ secrets.AWS_REGION }}

